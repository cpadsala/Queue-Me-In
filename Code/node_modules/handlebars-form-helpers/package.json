{
  "_args": [
    [
      {
        "raw": "handlebars-form-helpers",
        "scope": null,
        "escapedName": "handlebars-form-helpers",
        "name": "handlebars-form-helpers",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/alexander/Desktop/QueMeIn/7thIter/qmein4"
    ]
  ],
  "_from": "handlebars-form-helpers@latest",
  "_id": "handlebars-form-helpers@0.1.3",
  "_inCache": true,
  "_location": "/handlebars-form-helpers",
  "_npmUser": {
    "name": "badsyntax",
    "email": "willis.rh@gmail.com"
  },
  "_npmVersion": "1.2.25",
  "_phantomChildren": {},
  "_requested": {
    "raw": "handlebars-form-helpers",
    "scope": null,
    "escapedName": "handlebars-form-helpers",
    "name": "handlebars-form-helpers",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/handlebars-form-helpers/-/handlebars-form-helpers-0.1.3.tgz",
  "_shasum": "f93d5a3e23ef9354fbf638fbebe9d1780db0c806",
  "_shrinkwrap": null,
  "_spec": "handlebars-form-helpers",
  "_where": "/home/alexander/Desktop/QueMeIn/7thIter/qmein4",
  "bugs": {
    "url": "https://github.com/badsyntax/handlebars-form-helpers/issues"
  },
  "dependencies": {},
  "description": "Handlebars.js form helpers",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jasmine": "~0.3.3",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-uglify": "~0.1.2rc7",
    "grunt-jasmine-node": "~0.1.0",
    "grunt-template-jasmine-requirejs": "~0.1.2",
    "handlebars": "~1.0.12"
  },
  "directories": {},
  "dist": {
    "shasum": "f93d5a3e23ef9354fbf638fbebe9d1780db0c806",
    "tarball": "https://registry.npmjs.org/handlebars-form-helpers/-/handlebars-form-helpers-0.1.3.tgz"
  },
  "engines": {
    "node": ">=0.4.7"
  },
  "homepage": "https://github.com/badsyntax/handlebars-form-helpers",
  "keywords": [
    "handlebars helpers form"
  ],
  "main": "src/handlebars.form-helpers.js",
  "maintainers": [
    {
      "name": "badsyntax",
      "email": "willis.rh@gmail.com"
    }
  ],
  "name": "handlebars-form-helpers",
  "optionalDependencies": {},
  "readme": "# handlebars-form-helpers\n\n[![Build Status](https://travis-ci.org/badsyntax/handlebars-form-helpers.png?branch=master)](https://travis-ci.org/badsyntax/handlebars-form-helpers)\n[![Dependency Status](https://gemnasium.com/badsyntax/handlebars-form-helpers.png)](https://gemnasium.com/badsyntax/handlebars-form-helpers)\n\nA library of handlebars helpers that help with building forms.\n\n## Installation\n\n### Browser\n\n1. Either [download](https://raw.github.com/badsyntax/handlebars-form-helpers/master/dist/handlebars.form-helpers.min.js) the\nscript, or install with [bower](http://bower.io/): `bower install handlebars-form-helpers`\n2. Load the scripts into your page. (It does not matter which order the scripts are loaded in.)\n\n    ```html\n    <script src=\"handlebars.js\"></script>\n    <script src=\"handlebars.form-helpers.js\"></script>\n    ```\n\n3. Register the helpers:\n\n    ```javascript\n    HandlebarsFormHelpers.register(Handlebars);\n    ```\n\n### Node/CommonJS\n\n1. You can install the helpers with npm: `npm install handlebars-form-helpers`\n2. Load in the module and register it:\n\n    ```javascript\n    var hbs = require('hbs');\n    require('handlebars-form-helpers').register(hbs.handlebars);\n    ```\n\n### AMD\n\n1. Either [download](https://raw.github.com/badsyntax/handlebars-form-helpers/master/dist/handlebars.form-helpers.min.js) the\nscript, or install with [bower](http://bower.io/): `bower install handlebars-form-helpers`\n3. Load in the module and register it:\n\n  ```javascript\n  define(['handlebars', 'handlebars-form-helpers'], function(Handlebars, HandlebarsFormHelpers) {\n      HandlebarsFormHelpers.register(Handlebars);\n      // ..etc\n  });\n  ```\n\n## Usage\n\n### Registering the helpers\n\nYou have to register the helpers before you can use them in your templates. \nThe register method expects the Handlebars object to be passed in, and an *optional* config object, for example:\n\n```javascript\nHandlebarsFormHelpers.register(Handlebars, {\n  namespace: 'custom',\n  validationErrorClass: 'custom-validation-class'\n});\n```\n\nOnce the helpers are registered, you can use the helpers in your templates, and compile your templates as you usually\nwould. \n\n### Using the helpers\n\nMost of the helpers can be used inline, for example:\n\n```\n{{label \"name\" \"Please enter your name\"}}\n```\n\nThe only block helpers are the form, label and field_errors helpers:\n\n```\n{{#form \"/post\" class=\"form\"}} ... {{/form}}\n{{#label}}\n    A field label\n{{/label}}\n{{#field_errors \"surname\" errors}}\n    <span class=\"help-block\">{{this}}</span>\n{{/field_errors}}`\n```\n\nBy default the helpers are registered without a namespace. This gives you short and friendly helper names. \n\nIf you need to change the helpers namespace, you can specify a custom namespace when registering the helpers, for example:\n\n```javascript\nHandlebarsFormHelpers.register(Handlebars, {\n  namespace: 'myform'\n})\n```\n\nNow the helpers are created with that namespace, for example:\n\n```\n{{myform-label \"name\" \"Please enter your name\"}}\n```\n\n\n### Common form helpers\n\n```\n{{#form url class=\"form\"}}{{/form}}\n{{label \"name\" \"Please enter your name\"}}\n{{input \"firstname\" person.name}}\n{{button \"save\" \"Submit form\"}}\n{{submit \"save\" \"Submit form\"}}\n{{select \"title\" titles person.title}}\n{{checkbox \"apples\" \"yes\" true}}\n{{file \"fileupload\"}}\n{{hidden \"secret\" \"key123\"}}\n{{password \"password\"}}\n{{textarea \"text\" \"Here is some text\"}}\n```\n\n#### Examples:\n\n**Form helper**\n```html\n{{#form \"/contact\" class=\"form\"}}{{/form}}\n```\n```html\n<form method=\"POST\" action=\"/contact\" class=\"form\"></form>\n```\n\n**Label helper**\n```html\n{{label \"name\" \"Please enter your name\"}}\n```\n```html\n<label for=\"name\">Please enter your name</label>\n```\n```html\n{{#label}}Please enter your name{{/label}}\n```\n```html\n<label>Please enter your name</label>\n```\n\n**Input helper**\n```html\n{{input \"firstname\" \"Richard\"}}\n```\n```html\n<input type=\"text\" id=\"firstname\" name=\"firstname\" value=\"Richard\" />\n```\n\n**Button helper**\n```html\n{{button \"save\" \"Submit form\"}}\n```\n```html\n<button name=\"save\" type=\"button\">Submit form</button>\n```\n\n**Submit button helper**\n```html\n{{submit \"save\" \"Submit form\"}}\n```\n```html\n<button name=\"save\" type=\"submit\">Submit form</button>\n```\n\n**Select helper**\n```html\n{{select \"title\" titles title}}\n```\n```javascript\n{\n  titles: [{\n    value: 'mr',\n    text: 'Mr'\n  }],\n  title: 'mr'\n}\n```\n```html\n<select id=\"title\" name=\"title\"><option value=\"mr\" selected=\"selected\">Mr</option></select>\n```\n\n**Select (multiple) helper**\n```html\n{{select \"title\" titles selected}}\n```\n```javascript\n{\n  titles: [{\n    value: 'mr',\n    text: 'Mr'\n  }],\n  selected: ['mr']\n}\n```\n```html\n<select id=\"title\" name=\"title\" multiple=\"true\"><option value=\"mr\" selected=\"selected\">Mr</option></select>\n```\n\n**Checkbox helper**\n```html\n{{checkbox \"apples\" \"yes\" true}}\n```\n```html\n<input id=\"apples\" name=\"apples\" type=\"checkbox\" value=\"yes\" checked=\"true\" />\n```\n\n**File helper**\n```html\n{{file \"fileupload\"}}\n```\n```html\n<input name=\"fileupload\" id=\"fileupload\" type=\"file\" />\n```\n\n**Hidden helper**\n```html\n{{hidden \"secret\" \"key123\"}}\n```\n```html\n<input name=\"secret\" id=\"secret\" value=\"key123\" type=\"hidden\" />\n```\n\n**Password helper**\n```html\n{{password \"password\"}}\n```\n```html\n<input name=\"password\" id=\"password\" type=\"password\" />\n```\n\n**Textarea helper**\n```html\n{{textarea \"text\" \"Here is some text\"}}\n```\n```html\n<textarea name=\"text\" id=\"text\">Here is some text</textarea>\n```\n\n\n### Form validation helpers\n\nValidation helpers work in a similar way to the common form helpers, but handle displaying of validation errors and \nfield error styling. \n\nThe validation helpers expect an 'errors' object to be passed in, which is used to display the \nvalidation errors for the field.\n\nFor example:\n\n```javascript\nvar data = {\n  errors: {\n    name: [\n      'Please enter a name'\n    ]\n  }\n};\nvar source = '{{input_validation \"name\" \"\" errors}}' +\n    '{{field_errors \"name\" errors class=\"help-block text-error\"}}';\nvar template = Handlebars.compile(source);\nvar html = template(data);\n\n// Compiled HTML will be:\n// <input name=\"name\" id=\"name\" type=\"text\" class=\"validation-error\" />\n// <span class=\"help-block text-error\">Please enter a name</span>');\n```\n\n### Validation helpers\n\n```\n{{input_validation \"firstname\" person.name errors}}\n{{label_validation \"name\" \"Please enter your name\" errors}}\n{{select_validation \"title\" titles person.title errors}}\n{{checkbox_validation \"food[]\" \"apples\" true errors}}\n{{file_validation \"fileupload\" errors}}\n{{password_validation \"password\" \"dontdothis\" errors}}\n{{textarea_validation \"text\" \"Here is some text\" errors}}\n```\n\n### Error data\n\nThe errors object has to be in the following format:\n\n```javascript\nvar errors = {\n  fieldName: [\n    'Error message 1',\n    'Error message 2!'\n  ]\n};\n```\n\n#### Examples:\n\n**Input validation helper**\n```html\n{{input_validation \"name\" \"\" errors}}\n```\n```html\n<input name=\"name\" id=\"name\" type=\"text\" class=\"validation-error\" />\n```\n\n**Label validation helper**\n```html\n{{label_validation \"name\" \"\" errors}}\n```\n```html\n<label for=\"name\" class=\"validation-error\">Enter your name</label>\n```\n\n**Select validation helper**\n```html\n{{select_validation \"title\" titles \"\" errors}}\n```\n```html\n<select id=\"title\" name=\"title\" class=\"validation-error\"><option value=\"mr\">Mr</option></select>\n```\n\n**Checkbox validation helper**\n```html\n{{checkbox_validation \"title\" 1 false errors}}\n```\n```html\n<input name=\"title\" type=\"checkbox\" value=\"1\" id=\"title\" class=\"validation-error\" />\n```\n\n**File validation helper**\n```html\n{{file_validation \"fileupload\" errors}}\n```\n```html\n<input name=\"fileupload\" id=\"fileupload\" type=\"file\" class=\"validation-error\" />\n```\n\n**Password validation helper**\n```html\n{{password_validation \"password\" \"\" errors}}\n```\n```html\n<input name=\"password\" id=\"password\" type=\"password\" class=\"validation-error\" />\n```\n\n**Textarea validation helper**\n```html\n{{textarea_validation \"text\" \"Here is some text\" errors}}\n```\n```html\n<textarea name=\"text\" id=\"text\" class=\"validation-error\">Here is some text</textarea>\n```\n\n**Field errors helpers**\n\n**Inline**\n```\n{{field_errors \"text\" errors class=\"error\"}}\n```\n```html\n<div class=\"error\">Please enter some text</div>\n```\n**Block**\n```\n{{#field_errors \"text\" errors}}\n<span class=\"help-block\">{{this}}</span>\n{{/field_errors}}\n```\n```html\n<span class=\"help-block\">Error message 1</span>\n<span class=\"help-block\">Error message 2</span>\n```\n\n## Demo\n\nThis demo shows how to use the helpers to build a form that handles validation: \nhttp://badsyntax.github.io/handlebars-form-helpers/\n\n## Contributing\n\nFeel free to send pull requests. \n\n### Running the tests\n\nThis project uses [jasmine](http://pivotal.github.io/jasmine/) for testing. If you want to run the tests, you'll need to have \n[nodejs](http://nodejs.org/), [grunt-cli](https://github.com/gruntjs/grunt-cli) and [bower](http://bower.io/) installed.\nYou'll also need to install the project dependencies by \nrunning `npm install && bower install` in the project root.\n\nOnce everything is installed, you can run the tests by either running `npm test` or `grunt test`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/badsyntax/handlebars-form-helpers.git"
  },
  "scripts": {
    "test": "grunt test --verbose"
  },
  "version": "0.1.3"
}
